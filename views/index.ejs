<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta content='initial-scale=1.0, width=device-width' name='viewport'>
    <title>Elephant Calculator</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
</head>

<body>
    <div class="container align-items-center">
        <div class="row p-3 d-flex">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <div class="row p-2 text-center">
                    <h1 class="display-1">The Elephant Calculator</h1>
                </div>
                <div class="row p-2 text-center">
                    <h5>By <a href="https://github.com/xjarlie" target="__blank">Xjarlie</a></h5>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
        <div class="row p-3 d-flex">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <div class="row">
                    <div class="row p-2">
                        <div class="col-md-7">
                            <div class="form-floating mb-3">
                                <input type="number" class="form-control" id="input"
                                    placeholder="69">
                                <label for="floatingInput">Enter quantity</label>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <!-- <label class="form-label" for="inputSelect">Convert from:</label> -->
                            <div class="form-floating">
                                <select class="form-select p-2" id="inputSelect">
                                    <% for( const i in pluralAnimals ) { %>
                                        <option value="<%= i %>">
                                            <%= pluralAnimals[i] %>
                                        </option>
                                        <% } %>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row p-2">
                        <label class="form-label">Convert to:</label>
                        <% for (const i in animals) { %>
                            <div class="form-check">
                                <input class="form-check-input outputCheckbox" type="checkbox" id="<%= i %>">
                                <label class="form-check-label" for="<%= i %>">
                                    <%= animals[i] %>
                                </label>
                                &nbsp;
                                <i class="bi-info-circle" data-bs-toggle="tooltip" data-bs-placement="right"
                                    title="~<%= mass[i] %>kg" style="color: #b1b1b1;"></i>
                            </div>
                            <% } %>
                                <row class="p-1" style="font-size: 0.9rem;">
                                    <a href="/sources">View sources</a>
                                </row>
                                <div class="row p-1">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="roundSwitch" checked>
                                        <label class="form-check-label" for="roundSwitch">Round output to nearest whole
                                            animal</label>
                                    </div>
                                </div>

                    </div>
                    <div class="row p-2">
                        <button type="button" class="btn btn-primary" onclick="calculate()" id="calculateBtn"
                            disabled>Convert</button>
                    </div>
                    <div class="row">
                        <div class="row align-items-center">
                            <p id="stringDisplay"></p>
                        </div>
                    </div>
                    <div class="row" id="resultsDiv">
                        <div class="row p-2">

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
    <script src="public/pluralize.js"></script>
    <script>

        const names = {
            africanElephant: 'African Elephant',
            asianElephant: 'Asian Elephant',
            blueWildebeest: 'Blue Wildebeest',
            africanElephantNewborn: 'Newborn African Elephant',
            asianElephantNewborn: 'Newborn Asian Elephant',
            llama: 'Llama',
            gibbon: 'Gibbon',
            vampireBat: 'Vampire Bat'
        }

        const mass = {
            africanElephant: 7000,
            asianElephant: 5500,
            africanElephantNewborn: 110,
            asianElephantNewborn: 90,
            blueWildebeest: 250,
            llama: 113,
            gibbon: 13,
            vampireBat: 0.06
        };

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl, {
                popperConfig: function (defaultBsPopperConfig) {
                    // var newPopperConfig = {...}
                    // use defaultBsPopperConfig if needed...
                    // return newPopperConfig
                    return {
                        delay: { show: 500, hide: 100 }
                    };
                }
            })
        });

        document.querySelector('#input').oninput = btnEnabled;
        const outputs = document.querySelectorAll('.outputCheckbox');
        for (const i in outputs) {
            outputs[i].onchange = btnEnabled;
        }

        function btnEnabled() {
            const input = document.querySelector('#input').value;
            const inputType = document.querySelector('#inputSelect').value;

            const outputs = document.querySelectorAll('.outputCheckbox');
            let outputTypes = [];
            for (const i in outputs) {
                if (outputs[i].checked) {
                    outputTypes.push([outputs[i].id, mass[outputs[i].id]]);
                }
            }

            if (input && inputType && outputTypes.length > 0) {
                document.querySelector('#calculateBtn').disabled = false;
            } else {
                document.querySelector('#calculateBtn').disabled = true;
            }
        }



        function calculate() {
            const input = document.querySelector('#input').value;
            const inputType = document.querySelector('#inputSelect').value;
            const round = document.querySelector('#roundSwitch').checked;

            if (input && inputType) {

                const outputs = document.querySelectorAll('.outputCheckbox');
                let outputTypes = [];
                for (const i in outputs) {
                    if (outputs[i].checked) {
                        outputTypes.push([outputs[i].id, mass[outputs[i].id]]);
                    }
                }
                outputTypes.sort((a, b) => { return a[1] - b[1] });
                outputTypes.reverse();

                let inputMass = input * mass[inputType];
                let outputCountArray = [];
                for (const i in outputTypes) {

                    if (round === true) {
                        let initialCount = inputMass / mass[outputTypes[i][0]];
                        let count;
                        if (initialCount < 0.5) {
                            count = '~0';
                        } else {
                            count = Math.floor(initialCount);
                        }
                        inputMass = inputMass % mass[outputTypes[i][0]];
                        const type = outputTypes[i][0];
                        const outputCountEntry = [type, count];
                        outputCountArray.push(outputCountEntry);
                    } else {
                        if (inputMass > 0) {
                            const count = Math.round((inputMass / mass[outputTypes[i][0]]) * 100) / 100;
                            inputMass -= Math.round(mass[outputTypes[i][0]] * count);
                            console.log('lol', inputMass);
                            const type = outputTypes[i][0];
                            const outputCountEntry = [type, count];
                            outputCountArray.push(outputCountEntry);
                        }
                    }
                }

                let exact;
                if (inputMass === 0 && round === false) {
                    exact = true;
                }

                document.querySelector('#stringDisplay').textContent = `${input} ${names[inputType]}${input > 1 ? 's' : ''} weigh${!(input > 1) ? 's' : ''} the same as `;
                // outputCountArray = outputCountArray.filter(item => item[1] != 0);

                document.querySelector('#resultsDiv').innerHTML = '';
                for (const i in outputCountArray) {
                    const num = outputCountArray[i][1];
                    const animal = names[outputCountArray[i][0]];

                    if (num > 1e+20) {
                        alert('Number too big sry')
                    } else {
                        document.querySelector('#resultsDiv').append(createResult(animal, num));
                    }

                }
                document.querySelector('#resultsDiv').scrollIntoView({ behavior: 'smooth', block: 'center' });

            }

        }

        function createResult(animal, count) {
            const el = document.createElement('div');
            el.classList.add('row');
            el.classList.add('p-2');
            el.innerHTML += '<div class="col-md-2"></div>';
            el.innerHTML += `<div class="col-md-8 align-items-center">
                                <div class="row">
                                    <div class="card d-flex flex-row align-items-center clearfix">
                                        <div class="float-sm-start align-items-center">
                                            <h1 class="p-1">${count}</h1>
                                        </div>
                                        <div class="float-sm-end align-items-center">
                                            <h6 class="p-1">${pluralize(animal, count)}</h6>
                                        </div>
                                    </div>
                                </div>
                            </div>`;
            el.innerHTML += '<div class="col-md-2"></div>';
            return el;
        }

    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>
</body>

</html>